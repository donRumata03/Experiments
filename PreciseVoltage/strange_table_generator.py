import math
import json

from measurements import *

strange_table = []

for i in range(len(resistances)):
	this_r = resistances[i]
	p = powers[i]

	strange_table.append(
		(
			1 / (this_r + R_known),
			1 / math.sqrt(p * (this_r + R_known))
		)
	)
print("____________________________________________")
print(json.dumps(strange_table, indent = 4))


if __name__ == '__main__':
	plt.xlabel("1 / (R + R_known)")
	plt.ylabel("1 / sqrt(P * (R + R_known))")
	plt.scatter(*zip(*strange_table))
	plt.show()


"""
Outputs:

[
    [
        0.00997234233181411,
        0.7751937984496123
    ],
    [
        0.009818322381136451,
        0.7692307692307692
    ],
    [
        0.009450236255906398,
        0.7462686567164178
    ],
    [
        0.00890165111270639,
        0.7142857142857143
    ],
    [
        0.00857434023263169,
        0.6993006993006993
    ],
    [
        0.008040201005025126,
        0.6666666666666666
    ],
    [
        0.007700841871696142,
        0.6493506493506493
    ],
    [
        0.007332258778167567,
        0.628930817610063
    ],
    [
        0.006986150263512685,
        0.6097560975609757
    ],
    [
        0.0066213420041383395,
        0.5882352941176472
    ],
    [
        0.006523847306708984,
        0.5847953216374269
    ],
    [
        0.006353607116039971,
        0.5747126436781609
    ],
    [
        0.00606383874680666,
        0.558659217877095
    ],
    [
        0.005789818658509941,
        0.5434782608695652
    ],
    [
        0.005126643317598092,
        0.5050505050505051
    ],
    [
        0.004950123753093828,
        0.49751243781094534
    ],
    [
        0.004732399863394643,
        0.4854368932038835
    ],
    [
        0.003461289851748369,
        0.4149377593360996
    ],
    [
        0.0028064852564710346,
        0.37735849056603776
    ],
    [
        0.0022841480127912287,
        0.34965034965034963
    ],
    [
        0.0019049495845239268,
        0.3267973856209151
    ],
    [
        0.0015819839940442954,
        0.3086419753086419
    ],
    [
        0.001418503931066745,
        0.30030030030030025
    ],
    [
        0.0011874936642868518,
        0.2881844380403458
    ],
    [
        0.0010022411225100573,
        0.2770083102493075
    ],
    [
        0.000901245357220887,
        0.27173913043478265
    ],
    [
        0.0008040201005025126,
        0.2666666666666667
    ],
    [
        0.0007386011421939092,
        0.26246719160104987
    ],
    [
        0.0006475677355851422,
        0.25773195876288657
    ],
    [
        0.0006468238629042649,
        0.2564102564102564
    ],
    [
        0.0006111984860690219,
        0.25445292620865134
    ],
    [
        0.0005786508299071113,
        0.25252525252525254
    ],
    [
        0.0005530163379712633,
        0.25125628140703515
    ],
    [
        0.0005201005025125628,
        0.25
    ],
    [
        0.0004962779156327542,
        0.24813895781637715
    ],
    [
        0.0004676849594507189,
        0.24752475247524752
    ],
    [
        0.0004505285045919251,
        0.24630541871921185
    ],
    [
        0.00044201350734014044,
        0.24570024570024568
    ],
    [
        0.00044201350734014044,
        0.24570024570024568
    ]
]

Process finished with exit code 0


"""
